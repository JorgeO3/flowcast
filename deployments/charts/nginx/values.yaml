replicaCount: 2

image:
  repository: nginx
  tag: "1.23.1" # Ajusta a la versión deseada
  pullPolicy: IfNotPresent

service:
  type: LoadBalancer
  ports:
    http: 80
    https: 443
    api: 8080

config:
  nginx.conf: |
    events { }
    http {
      # Configuración del Ingress Controller
      server {
        listen 80;
        server_name _; # Captura todos los hosts

        # Ruteo de Ingress
        location / {
          proxy_pass http://ingress-controller-service;
          proxy_set_header Host $host;
          proxy_set_header X-Real-IP $remote_addr;
          proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
          proxy_set_header X-Forwarded-Proto $scheme;
        }
      }

      # Configuración del API Gateway
      server {
        listen 8080;
        server_name api-gateway.local;

        # Autenticación Básica
        location / {
          auth_basic "Restricted Area";
          auth_basic_user_file /etc/nginx/.htpasswd;

          proxy_pass http://backend-service;
          proxy_set_header Host $host;
          proxy_set_header X-Real-IP $remote_addr;
          proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
          proxy_set_header X-Forwarded-Proto $scheme;
        }

        # Limitación de Tasa (Rate Limiting)
        limit_req_zone $binary_remote_addr zone=mylimit:10m rate=1r/s;

        location /api/ {
          limit_req zone=mylimit burst=5;
          proxy_pass http://api-service;
          proxy_set_header Host $host;
          proxy_set_header X-Real-IP $remote_addr;
          proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
          proxy_set_header X-Forwarded-Proto $scheme;
        }
      }
    }

resources:
  limits:
    cpu: "1000m"
    memory: "1Gi"
  requests:
    cpu: "500m"
    memory: "512Mi"

nodeSelector: {}

tolerations: []

affinity: {}

ingress:
  enabled: true
  host: api-gateway.local
  tlsSecret: nginx-tls