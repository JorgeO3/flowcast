// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.34.2
// 	protoc        (unknown)
// source: catalog/catalog.proto

package catalog

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type CreateActRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Act *Act `protobuf:"bytes,1,opt,name=act,proto3" json:"act,omitempty"`
}

func (x *CreateActRequest) Reset() {
	*x = CreateActRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_catalog_catalog_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateActRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateActRequest) ProtoMessage() {}

func (x *CreateActRequest) ProtoReflect() protoreflect.Message {
	mi := &file_catalog_catalog_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateActRequest.ProtoReflect.Descriptor instead.
func (*CreateActRequest) Descriptor() ([]byte, []int) {
	return file_catalog_catalog_proto_rawDescGZIP(), []int{0}
}

func (x *CreateActRequest) GetAct() *Act {
	if x != nil {
		return x.Act
	}
	return nil
}

type CreateActResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
}

func (x *CreateActResponse) Reset() {
	*x = CreateActResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_catalog_catalog_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateActResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateActResponse) ProtoMessage() {}

func (x *CreateActResponse) ProtoReflect() protoreflect.Message {
	mi := &file_catalog_catalog_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateActResponse.ProtoReflect.Descriptor instead.
func (*CreateActResponse) Descriptor() ([]byte, []int) {
	return file_catalog_catalog_proto_rawDescGZIP(), []int{1}
}

func (x *CreateActResponse) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

type UpdateActRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Act *Act `protobuf:"bytes,1,opt,name=act,proto3" json:"act,omitempty"`
}

func (x *UpdateActRequest) Reset() {
	*x = UpdateActRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_catalog_catalog_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateActRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateActRequest) ProtoMessage() {}

func (x *UpdateActRequest) ProtoReflect() protoreflect.Message {
	mi := &file_catalog_catalog_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateActRequest.ProtoReflect.Descriptor instead.
func (*UpdateActRequest) Descriptor() ([]byte, []int) {
	return file_catalog_catalog_proto_rawDescGZIP(), []int{2}
}

func (x *UpdateActRequest) GetAct() *Act {
	if x != nil {
		return x.Act
	}
	return nil
}

type UpdateActResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Success bool `protobuf:"varint,1,opt,name=success,proto3" json:"success,omitempty"`
}

func (x *UpdateActResponse) Reset() {
	*x = UpdateActResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_catalog_catalog_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateActResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateActResponse) ProtoMessage() {}

func (x *UpdateActResponse) ProtoReflect() protoreflect.Message {
	mi := &file_catalog_catalog_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateActResponse.ProtoReflect.Descriptor instead.
func (*UpdateActResponse) Descriptor() ([]byte, []int) {
	return file_catalog_catalog_proto_rawDescGZIP(), []int{3}
}

func (x *UpdateActResponse) GetSuccess() bool {
	if x != nil {
		return x.Success
	}
	return false
}

type GetActRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
}

func (x *GetActRequest) Reset() {
	*x = GetActRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_catalog_catalog_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetActRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetActRequest) ProtoMessage() {}

func (x *GetActRequest) ProtoReflect() protoreflect.Message {
	mi := &file_catalog_catalog_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetActRequest.ProtoReflect.Descriptor instead.
func (*GetActRequest) Descriptor() ([]byte, []int) {
	return file_catalog_catalog_proto_rawDescGZIP(), []int{4}
}

func (x *GetActRequest) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

type GetActResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Act *Act `protobuf:"bytes,1,opt,name=act,proto3" json:"act,omitempty"`
}

func (x *GetActResponse) Reset() {
	*x = GetActResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_catalog_catalog_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetActResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetActResponse) ProtoMessage() {}

func (x *GetActResponse) ProtoReflect() protoreflect.Message {
	mi := &file_catalog_catalog_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetActResponse.ProtoReflect.Descriptor instead.
func (*GetActResponse) Descriptor() ([]byte, []int) {
	return file_catalog_catalog_proto_rawDescGZIP(), []int{5}
}

func (x *GetActResponse) GetAct() *Act {
	if x != nil {
		return x.Act
	}
	return nil
}

type GetActsRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Limit  int32  `protobuf:"varint,1,opt,name=limit,proto3" json:"limit,omitempty"`
	Offset int32  `protobuf:"varint,2,opt,name=offset,proto3" json:"offset,omitempty"`
	Genre  string `protobuf:"bytes,3,opt,name=genre,proto3" json:"genre,omitempty"`
}

func (x *GetActsRequest) Reset() {
	*x = GetActsRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_catalog_catalog_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetActsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetActsRequest) ProtoMessage() {}

func (x *GetActsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_catalog_catalog_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetActsRequest.ProtoReflect.Descriptor instead.
func (*GetActsRequest) Descriptor() ([]byte, []int) {
	return file_catalog_catalog_proto_rawDescGZIP(), []int{6}
}

func (x *GetActsRequest) GetLimit() int32 {
	if x != nil {
		return x.Limit
	}
	return 0
}

func (x *GetActsRequest) GetOffset() int32 {
	if x != nil {
		return x.Offset
	}
	return 0
}

func (x *GetActsRequest) GetGenre() string {
	if x != nil {
		return x.Genre
	}
	return ""
}

type GetActsResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Acts []*Act `protobuf:"bytes,1,rep,name=acts,proto3" json:"acts,omitempty"`
}

func (x *GetActsResponse) Reset() {
	*x = GetActsResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_catalog_catalog_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetActsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetActsResponse) ProtoMessage() {}

func (x *GetActsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_catalog_catalog_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetActsResponse.ProtoReflect.Descriptor instead.
func (*GetActsResponse) Descriptor() ([]byte, []int) {
	return file_catalog_catalog_proto_rawDescGZIP(), []int{7}
}

func (x *GetActsResponse) GetActs() []*Act {
	if x != nil {
		return x.Acts
	}
	return nil
}

type DeleteActRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
}

func (x *DeleteActRequest) Reset() {
	*x = DeleteActRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_catalog_catalog_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteActRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteActRequest) ProtoMessage() {}

func (x *DeleteActRequest) ProtoReflect() protoreflect.Message {
	mi := &file_catalog_catalog_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteActRequest.ProtoReflect.Descriptor instead.
func (*DeleteActRequest) Descriptor() ([]byte, []int) {
	return file_catalog_catalog_proto_rawDescGZIP(), []int{8}
}

func (x *DeleteActRequest) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

type DeleteActResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Success bool `protobuf:"varint,1,opt,name=success,proto3" json:"success,omitempty"`
}

func (x *DeleteActResponse) Reset() {
	*x = DeleteActResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_catalog_catalog_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteActResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteActResponse) ProtoMessage() {}

func (x *DeleteActResponse) ProtoReflect() protoreflect.Message {
	mi := &file_catalog_catalog_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteActResponse.ProtoReflect.Descriptor instead.
func (*DeleteActResponse) Descriptor() ([]byte, []int) {
	return file_catalog_catalog_proto_rawDescGZIP(), []int{9}
}

func (x *DeleteActResponse) GetSuccess() bool {
	if x != nil {
		return x.Success
	}
	return false
}

type CreateManyRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Acts []*Act `protobuf:"bytes,1,rep,name=acts,proto3" json:"acts,omitempty"`
}

func (x *CreateManyRequest) Reset() {
	*x = CreateManyRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_catalog_catalog_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateManyRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateManyRequest) ProtoMessage() {}

func (x *CreateManyRequest) ProtoReflect() protoreflect.Message {
	mi := &file_catalog_catalog_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateManyRequest.ProtoReflect.Descriptor instead.
func (*CreateManyRequest) Descriptor() ([]byte, []int) {
	return file_catalog_catalog_proto_rawDescGZIP(), []int{10}
}

func (x *CreateManyRequest) GetActs() []*Act {
	if x != nil {
		return x.Acts
	}
	return nil
}

type CreateManyResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Ids []string `protobuf:"bytes,1,rep,name=ids,proto3" json:"ids,omitempty"`
}

func (x *CreateManyResponse) Reset() {
	*x = CreateManyResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_catalog_catalog_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateManyResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateManyResponse) ProtoMessage() {}

func (x *CreateManyResponse) ProtoReflect() protoreflect.Message {
	mi := &file_catalog_catalog_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateManyResponse.ProtoReflect.Descriptor instead.
func (*CreateManyResponse) Descriptor() ([]byte, []int) {
	return file_catalog_catalog_proto_rawDescGZIP(), []int{11}
}

func (x *CreateManyResponse) GetIds() []string {
	if x != nil {
		return x.Ids
	}
	return nil
}

type Act struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id                string    `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Name              string    `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	Type              string    `protobuf:"bytes,3,opt,name=type,proto3" json:"type,omitempty"`
	Biography         string    `protobuf:"bytes,4,opt,name=biography,proto3" json:"biography,omitempty"`
	FormationDate     string    `protobuf:"bytes,5,opt,name=formation_date,json=formationDate,proto3" json:"formation_date,omitempty"`
	DisbandDate       string    `protobuf:"bytes,6,opt,name=disband_date,json=disbandDate,proto3" json:"disband_date,omitempty"`
	ProfilePictureUrl string    `protobuf:"bytes,7,opt,name=profile_picture_url,json=profilePictureUrl,proto3" json:"profile_picture_url,omitempty"`
	Genres            []*Genre  `protobuf:"bytes,8,rep,name=genres,proto3" json:"genres,omitempty"`
	Albums            []*Album  `protobuf:"bytes,9,rep,name=albums,proto3" json:"albums,omitempty"`
	Members           []*Member `protobuf:"bytes,10,rep,name=members,proto3" json:"members,omitempty"`
}

func (x *Act) Reset() {
	*x = Act{}
	if protoimpl.UnsafeEnabled {
		mi := &file_catalog_catalog_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Act) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Act) ProtoMessage() {}

func (x *Act) ProtoReflect() protoreflect.Message {
	mi := &file_catalog_catalog_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Act.ProtoReflect.Descriptor instead.
func (*Act) Descriptor() ([]byte, []int) {
	return file_catalog_catalog_proto_rawDescGZIP(), []int{12}
}

func (x *Act) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *Act) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *Act) GetType() string {
	if x != nil {
		return x.Type
	}
	return ""
}

func (x *Act) GetBiography() string {
	if x != nil {
		return x.Biography
	}
	return ""
}

func (x *Act) GetFormationDate() string {
	if x != nil {
		return x.FormationDate
	}
	return ""
}

func (x *Act) GetDisbandDate() string {
	if x != nil {
		return x.DisbandDate
	}
	return ""
}

func (x *Act) GetProfilePictureUrl() string {
	if x != nil {
		return x.ProfilePictureUrl
	}
	return ""
}

func (x *Act) GetGenres() []*Genre {
	if x != nil {
		return x.Genres
	}
	return nil
}

func (x *Act) GetAlbums() []*Album {
	if x != nil {
		return x.Albums
	}
	return nil
}

func (x *Act) GetMembers() []*Member {
	if x != nil {
		return x.Members
	}
	return nil
}

type Album struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id          string  `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Title       string  `protobuf:"bytes,2,opt,name=title,proto3" json:"title,omitempty"`
	ReleaseDate string  `protobuf:"bytes,3,opt,name=release_date,json=releaseDate,proto3" json:"release_date,omitempty"`
	Genre       *Genre  `protobuf:"bytes,4,opt,name=genre,proto3" json:"genre,omitempty"`
	CoverArtUrl string  `protobuf:"bytes,5,opt,name=cover_art_url,json=coverArtUrl,proto3" json:"cover_art_url,omitempty"`
	TotalTracks int32   `protobuf:"varint,6,opt,name=total_tracks,json=totalTracks,proto3" json:"total_tracks,omitempty"`
	Songs       []*Song `protobuf:"bytes,7,rep,name=songs,proto3" json:"songs,omitempty"`
}

func (x *Album) Reset() {
	*x = Album{}
	if protoimpl.UnsafeEnabled {
		mi := &file_catalog_catalog_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Album) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Album) ProtoMessage() {}

func (x *Album) ProtoReflect() protoreflect.Message {
	mi := &file_catalog_catalog_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Album.ProtoReflect.Descriptor instead.
func (*Album) Descriptor() ([]byte, []int) {
	return file_catalog_catalog_proto_rawDescGZIP(), []int{13}
}

func (x *Album) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *Album) GetTitle() string {
	if x != nil {
		return x.Title
	}
	return ""
}

func (x *Album) GetReleaseDate() string {
	if x != nil {
		return x.ReleaseDate
	}
	return ""
}

func (x *Album) GetGenre() *Genre {
	if x != nil {
		return x.Genre
	}
	return nil
}

func (x *Album) GetCoverArtUrl() string {
	if x != nil {
		return x.CoverArtUrl
	}
	return ""
}

func (x *Album) GetTotalTracks() int32 {
	if x != nil {
		return x.TotalTracks
	}
	return 0
}

func (x *Album) GetSongs() []*Song {
	if x != nil {
		return x.Songs
	}
	return nil
}

type Genre struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name        string `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Description string `protobuf:"bytes,2,opt,name=description,proto3" json:"description,omitempty"`
}

func (x *Genre) Reset() {
	*x = Genre{}
	if protoimpl.UnsafeEnabled {
		mi := &file_catalog_catalog_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Genre) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Genre) ProtoMessage() {}

func (x *Genre) ProtoReflect() protoreflect.Message {
	mi := &file_catalog_catalog_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Genre.ProtoReflect.Descriptor instead.
func (*Genre) Descriptor() ([]byte, []int) {
	return file_catalog_catalog_proto_rawDescGZIP(), []int{14}
}

func (x *Genre) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *Genre) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

type Member struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name              string `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Biography         string `protobuf:"bytes,2,opt,name=biography,proto3" json:"biography,omitempty"`
	BirthDate         string `protobuf:"bytes,3,opt,name=birth_date,json=birthDate,proto3" json:"birth_date,omitempty"`
	ProfilePictureUrl string `protobuf:"bytes,4,opt,name=profile_picture_url,json=profilePictureUrl,proto3" json:"profile_picture_url,omitempty"`
	StartDate         string `protobuf:"bytes,5,opt,name=start_date,json=startDate,proto3" json:"start_date,omitempty"`
	EndDate           string `protobuf:"bytes,6,opt,name=end_date,json=endDate,proto3" json:"end_date,omitempty"`
}

func (x *Member) Reset() {
	*x = Member{}
	if protoimpl.UnsafeEnabled {
		mi := &file_catalog_catalog_proto_msgTypes[15]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Member) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Member) ProtoMessage() {}

func (x *Member) ProtoReflect() protoreflect.Message {
	mi := &file_catalog_catalog_proto_msgTypes[15]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Member.ProtoReflect.Descriptor instead.
func (*Member) Descriptor() ([]byte, []int) {
	return file_catalog_catalog_proto_rawDescGZIP(), []int{15}
}

func (x *Member) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *Member) GetBiography() string {
	if x != nil {
		return x.Biography
	}
	return ""
}

func (x *Member) GetBirthDate() string {
	if x != nil {
		return x.BirthDate
	}
	return ""
}

func (x *Member) GetProfilePictureUrl() string {
	if x != nil {
		return x.ProfilePictureUrl
	}
	return ""
}

func (x *Member) GetStartDate() string {
	if x != nil {
		return x.StartDate
	}
	return ""
}

func (x *Member) GetEndDate() string {
	if x != nil {
		return x.EndDate
	}
	return ""
}

type AudioBitrate struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Bitrate  int32  `protobuf:"varint,1,opt,name=bitrate,proto3" json:"bitrate,omitempty"`
	AudioUrl string `protobuf:"bytes,2,opt,name=audio_url,json=audioUrl,proto3" json:"audio_url,omitempty"`
}

func (x *AudioBitrate) Reset() {
	*x = AudioBitrate{}
	if protoimpl.UnsafeEnabled {
		mi := &file_catalog_catalog_proto_msgTypes[16]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AudioBitrate) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AudioBitrate) ProtoMessage() {}

func (x *AudioBitrate) ProtoReflect() protoreflect.Message {
	mi := &file_catalog_catalog_proto_msgTypes[16]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AudioBitrate.ProtoReflect.Descriptor instead.
func (*AudioBitrate) Descriptor() ([]byte, []int) {
	return file_catalog_catalog_proto_rawDescGZIP(), []int{16}
}

func (x *AudioBitrate) GetBitrate() int32 {
	if x != nil {
		return x.Bitrate
	}
	return 0
}

func (x *AudioBitrate) GetAudioUrl() string {
	if x != nil {
		return x.AudioUrl
	}
	return ""
}

type AudioFeatures struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Tempo            int32   `protobuf:"varint,1,opt,name=tempo,proto3" json:"tempo,omitempty"`
	AudioKey         string  `protobuf:"bytes,2,opt,name=audio_key,json=audioKey,proto3" json:"audio_key,omitempty"`
	Mode             string  `protobuf:"bytes,3,opt,name=mode,proto3" json:"mode,omitempty"`
	Loudness         float64 `protobuf:"fixed64,4,opt,name=loudness,proto3" json:"loudness,omitempty"`
	Energy           float64 `protobuf:"fixed64,5,opt,name=energy,proto3" json:"energy,omitempty"`
	Danceability     float64 `protobuf:"fixed64,6,opt,name=danceability,proto3" json:"danceability,omitempty"`
	Speechiness      float64 `protobuf:"fixed64,7,opt,name=speechiness,proto3" json:"speechiness,omitempty"`
	Acousticness     float64 `protobuf:"fixed64,8,opt,name=acousticness,proto3" json:"acousticness,omitempty"`
	Instrumentalness float64 `protobuf:"fixed64,9,opt,name=instrumentalness,proto3" json:"instrumentalness,omitempty"`
	Liveness         float64 `protobuf:"fixed64,10,opt,name=liveness,proto3" json:"liveness,omitempty"`
	Valence          float64 `protobuf:"fixed64,11,opt,name=valence,proto3" json:"valence,omitempty"`
}

func (x *AudioFeatures) Reset() {
	*x = AudioFeatures{}
	if protoimpl.UnsafeEnabled {
		mi := &file_catalog_catalog_proto_msgTypes[17]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AudioFeatures) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AudioFeatures) ProtoMessage() {}

func (x *AudioFeatures) ProtoReflect() protoreflect.Message {
	mi := &file_catalog_catalog_proto_msgTypes[17]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AudioFeatures.ProtoReflect.Descriptor instead.
func (*AudioFeatures) Descriptor() ([]byte, []int) {
	return file_catalog_catalog_proto_rawDescGZIP(), []int{17}
}

func (x *AudioFeatures) GetTempo() int32 {
	if x != nil {
		return x.Tempo
	}
	return 0
}

func (x *AudioFeatures) GetAudioKey() string {
	if x != nil {
		return x.AudioKey
	}
	return ""
}

func (x *AudioFeatures) GetMode() string {
	if x != nil {
		return x.Mode
	}
	return ""
}

func (x *AudioFeatures) GetLoudness() float64 {
	if x != nil {
		return x.Loudness
	}
	return 0
}

func (x *AudioFeatures) GetEnergy() float64 {
	if x != nil {
		return x.Energy
	}
	return 0
}

func (x *AudioFeatures) GetDanceability() float64 {
	if x != nil {
		return x.Danceability
	}
	return 0
}

func (x *AudioFeatures) GetSpeechiness() float64 {
	if x != nil {
		return x.Speechiness
	}
	return 0
}

func (x *AudioFeatures) GetAcousticness() float64 {
	if x != nil {
		return x.Acousticness
	}
	return 0
}

func (x *AudioFeatures) GetInstrumentalness() float64 {
	if x != nil {
		return x.Instrumentalness
	}
	return 0
}

func (x *AudioFeatures) GetLiveness() float64 {
	if x != nil {
		return x.Liveness
	}
	return 0
}

func (x *AudioFeatures) GetValence() float64 {
	if x != nil {
		return x.Valence
	}
	return 0
}

type Song struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id            string          `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Title         string          `protobuf:"bytes,2,opt,name=title,proto3" json:"title,omitempty"`
	AudioFeatures *AudioFeatures  `protobuf:"bytes,3,opt,name=audio_features,json=audioFeatures,proto3" json:"audio_features,omitempty"`
	Genre         *Genre          `protobuf:"bytes,4,opt,name=genre,proto3" json:"genre,omitempty"`
	ReleaseDate   string          `protobuf:"bytes,5,opt,name=release_date,json=releaseDate,proto3" json:"release_date,omitempty"`
	Duration      int32           `protobuf:"varint,6,opt,name=duration,proto3" json:"duration,omitempty"`
	Lyrics        string          `protobuf:"bytes,7,opt,name=lyrics,proto3" json:"lyrics,omitempty"`
	Explicit      bool            `protobuf:"varint,8,opt,name=explicit,proto3" json:"explicit,omitempty"`
	Bitrates      []*AudioBitrate `protobuf:"bytes,9,rep,name=bitrates,proto3" json:"bitrates,omitempty"`
}

func (x *Song) Reset() {
	*x = Song{}
	if protoimpl.UnsafeEnabled {
		mi := &file_catalog_catalog_proto_msgTypes[18]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Song) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Song) ProtoMessage() {}

func (x *Song) ProtoReflect() protoreflect.Message {
	mi := &file_catalog_catalog_proto_msgTypes[18]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Song.ProtoReflect.Descriptor instead.
func (*Song) Descriptor() ([]byte, []int) {
	return file_catalog_catalog_proto_rawDescGZIP(), []int{18}
}

func (x *Song) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *Song) GetTitle() string {
	if x != nil {
		return x.Title
	}
	return ""
}

func (x *Song) GetAudioFeatures() *AudioFeatures {
	if x != nil {
		return x.AudioFeatures
	}
	return nil
}

func (x *Song) GetGenre() *Genre {
	if x != nil {
		return x.Genre
	}
	return nil
}

func (x *Song) GetReleaseDate() string {
	if x != nil {
		return x.ReleaseDate
	}
	return ""
}

func (x *Song) GetDuration() int32 {
	if x != nil {
		return x.Duration
	}
	return 0
}

func (x *Song) GetLyrics() string {
	if x != nil {
		return x.Lyrics
	}
	return ""
}

func (x *Song) GetExplicit() bool {
	if x != nil {
		return x.Explicit
	}
	return false
}

func (x *Song) GetBitrates() []*AudioBitrate {
	if x != nil {
		return x.Bitrates
	}
	return nil
}

var File_catalog_catalog_proto protoreflect.FileDescriptor

var file_catalog_catalog_proto_rawDesc = []byte{
	0x0a, 0x15, 0x63, 0x61, 0x74, 0x61, 0x6c, 0x6f, 0x67, 0x2f, 0x63, 0x61, 0x74, 0x61, 0x6c, 0x6f,
	0x67, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x07, 0x63, 0x61, 0x74, 0x61, 0x6c, 0x6f, 0x67,
	0x22, 0x32, 0x0a, 0x10, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x41, 0x63, 0x74, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x12, 0x1e, 0x0a, 0x03, 0x61, 0x63, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x0c, 0x2e, 0x63, 0x61, 0x74, 0x61, 0x6c, 0x6f, 0x67, 0x2e, 0x41, 0x63, 0x74, 0x52,
	0x03, 0x61, 0x63, 0x74, 0x22, 0x23, 0x0a, 0x11, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x41, 0x63,
	0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x22, 0x32, 0x0a, 0x10, 0x55, 0x70, 0x64,
	0x61, 0x74, 0x65, 0x41, 0x63, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1e, 0x0a,
	0x03, 0x61, 0x63, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0c, 0x2e, 0x63, 0x61, 0x74,
	0x61, 0x6c, 0x6f, 0x67, 0x2e, 0x41, 0x63, 0x74, 0x52, 0x03, 0x61, 0x63, 0x74, 0x22, 0x2d, 0x0a,
	0x11, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x41, 0x63, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x73, 0x75, 0x63, 0x63, 0x65, 0x73, 0x73, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x08, 0x52, 0x07, 0x73, 0x75, 0x63, 0x63, 0x65, 0x73, 0x73, 0x22, 0x1f, 0x0a, 0x0d,
	0x47, 0x65, 0x74, 0x41, 0x63, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x0e, 0x0a,
	0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x22, 0x30, 0x0a,
	0x0e, 0x47, 0x65, 0x74, 0x41, 0x63, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12,
	0x1e, 0x0a, 0x03, 0x61, 0x63, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0c, 0x2e, 0x63,
	0x61, 0x74, 0x61, 0x6c, 0x6f, 0x67, 0x2e, 0x41, 0x63, 0x74, 0x52, 0x03, 0x61, 0x63, 0x74, 0x22,
	0x54, 0x0a, 0x0e, 0x47, 0x65, 0x74, 0x41, 0x63, 0x74, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x12, 0x14, 0x0a, 0x05, 0x6c, 0x69, 0x6d, 0x69, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05,
	0x52, 0x05, 0x6c, 0x69, 0x6d, 0x69, 0x74, 0x12, 0x16, 0x0a, 0x06, 0x6f, 0x66, 0x66, 0x73, 0x65,
	0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x6f, 0x66, 0x66, 0x73, 0x65, 0x74, 0x12,
	0x14, 0x0a, 0x05, 0x67, 0x65, 0x6e, 0x72, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05,
	0x67, 0x65, 0x6e, 0x72, 0x65, 0x22, 0x33, 0x0a, 0x0f, 0x47, 0x65, 0x74, 0x41, 0x63, 0x74, 0x73,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x20, 0x0a, 0x04, 0x61, 0x63, 0x74, 0x73,
	0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x0c, 0x2e, 0x63, 0x61, 0x74, 0x61, 0x6c, 0x6f, 0x67,
	0x2e, 0x41, 0x63, 0x74, 0x52, 0x04, 0x61, 0x63, 0x74, 0x73, 0x22, 0x22, 0x0a, 0x10, 0x44, 0x65,
	0x6c, 0x65, 0x74, 0x65, 0x41, 0x63, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x0e,
	0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x22, 0x2d,
	0x0a, 0x11, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x41, 0x63, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x73, 0x75, 0x63, 0x63, 0x65, 0x73, 0x73, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x08, 0x52, 0x07, 0x73, 0x75, 0x63, 0x63, 0x65, 0x73, 0x73, 0x22, 0x35, 0x0a,
	0x11, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x4d, 0x61, 0x6e, 0x79, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x12, 0x20, 0x0a, 0x04, 0x61, 0x63, 0x74, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b,
	0x32, 0x0c, 0x2e, 0x63, 0x61, 0x74, 0x61, 0x6c, 0x6f, 0x67, 0x2e, 0x41, 0x63, 0x74, 0x52, 0x04,
	0x61, 0x63, 0x74, 0x73, 0x22, 0x26, 0x0a, 0x12, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x4d, 0x61,
	0x6e, 0x79, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x10, 0x0a, 0x03, 0x69, 0x64,
	0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x09, 0x52, 0x03, 0x69, 0x64, 0x73, 0x22, 0xd0, 0x02, 0x0a,
	0x03, 0x41, 0x63, 0x74, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x02, 0x69, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x74, 0x79, 0x70, 0x65,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x74, 0x79, 0x70, 0x65, 0x12, 0x1c, 0x0a, 0x09,
	0x62, 0x69, 0x6f, 0x67, 0x72, 0x61, 0x70, 0x68, 0x79, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x09, 0x62, 0x69, 0x6f, 0x67, 0x72, 0x61, 0x70, 0x68, 0x79, 0x12, 0x25, 0x0a, 0x0e, 0x66, 0x6f,
	0x72, 0x6d, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x64, 0x61, 0x74, 0x65, 0x18, 0x05, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x0d, 0x66, 0x6f, 0x72, 0x6d, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x44, 0x61, 0x74,
	0x65, 0x12, 0x21, 0x0a, 0x0c, 0x64, 0x69, 0x73, 0x62, 0x61, 0x6e, 0x64, 0x5f, 0x64, 0x61, 0x74,
	0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x64, 0x69, 0x73, 0x62, 0x61, 0x6e, 0x64,
	0x44, 0x61, 0x74, 0x65, 0x12, 0x2e, 0x0a, 0x13, 0x70, 0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65, 0x5f,
	0x70, 0x69, 0x63, 0x74, 0x75, 0x72, 0x65, 0x5f, 0x75, 0x72, 0x6c, 0x18, 0x07, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x11, 0x70, 0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65, 0x50, 0x69, 0x63, 0x74, 0x75, 0x72,
	0x65, 0x55, 0x72, 0x6c, 0x12, 0x26, 0x0a, 0x06, 0x67, 0x65, 0x6e, 0x72, 0x65, 0x73, 0x18, 0x08,
	0x20, 0x03, 0x28, 0x0b, 0x32, 0x0e, 0x2e, 0x63, 0x61, 0x74, 0x61, 0x6c, 0x6f, 0x67, 0x2e, 0x47,
	0x65, 0x6e, 0x72, 0x65, 0x52, 0x06, 0x67, 0x65, 0x6e, 0x72, 0x65, 0x73, 0x12, 0x26, 0x0a, 0x06,
	0x61, 0x6c, 0x62, 0x75, 0x6d, 0x73, 0x18, 0x09, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x0e, 0x2e, 0x63,
	0x61, 0x74, 0x61, 0x6c, 0x6f, 0x67, 0x2e, 0x41, 0x6c, 0x62, 0x75, 0x6d, 0x52, 0x06, 0x61, 0x6c,
	0x62, 0x75, 0x6d, 0x73, 0x12, 0x29, 0x0a, 0x07, 0x6d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x73, 0x18,
	0x0a, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x0f, 0x2e, 0x63, 0x61, 0x74, 0x61, 0x6c, 0x6f, 0x67, 0x2e,
	0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x52, 0x07, 0x6d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x73, 0x22,
	0xe2, 0x01, 0x0a, 0x05, 0x41, 0x6c, 0x62, 0x75, 0x6d, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x69, 0x74,
	0x6c, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x12,
	0x21, 0x0a, 0x0c, 0x72, 0x65, 0x6c, 0x65, 0x61, 0x73, 0x65, 0x5f, 0x64, 0x61, 0x74, 0x65, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x72, 0x65, 0x6c, 0x65, 0x61, 0x73, 0x65, 0x44, 0x61,
	0x74, 0x65, 0x12, 0x24, 0x0a, 0x05, 0x67, 0x65, 0x6e, 0x72, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x0e, 0x2e, 0x63, 0x61, 0x74, 0x61, 0x6c, 0x6f, 0x67, 0x2e, 0x47, 0x65, 0x6e, 0x72,
	0x65, 0x52, 0x05, 0x67, 0x65, 0x6e, 0x72, 0x65, 0x12, 0x22, 0x0a, 0x0d, 0x63, 0x6f, 0x76, 0x65,
	0x72, 0x5f, 0x61, 0x72, 0x74, 0x5f, 0x75, 0x72, 0x6c, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x0b, 0x63, 0x6f, 0x76, 0x65, 0x72, 0x41, 0x72, 0x74, 0x55, 0x72, 0x6c, 0x12, 0x21, 0x0a, 0x0c,
	0x74, 0x6f, 0x74, 0x61, 0x6c, 0x5f, 0x74, 0x72, 0x61, 0x63, 0x6b, 0x73, 0x18, 0x06, 0x20, 0x01,
	0x28, 0x05, 0x52, 0x0b, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x54, 0x72, 0x61, 0x63, 0x6b, 0x73, 0x12,
	0x23, 0x0a, 0x05, 0x73, 0x6f, 0x6e, 0x67, 0x73, 0x18, 0x07, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x0d,
	0x2e, 0x63, 0x61, 0x74, 0x61, 0x6c, 0x6f, 0x67, 0x2e, 0x53, 0x6f, 0x6e, 0x67, 0x52, 0x05, 0x73,
	0x6f, 0x6e, 0x67, 0x73, 0x22, 0x3d, 0x0a, 0x05, 0x47, 0x65, 0x6e, 0x72, 0x65, 0x12, 0x12, 0x0a,
	0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d,
	0x65, 0x12, 0x20, 0x0a, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74,
	0x69, 0x6f, 0x6e, 0x22, 0xc3, 0x01, 0x0a, 0x06, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x12, 0x12,
	0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61,
	0x6d, 0x65, 0x12, 0x1c, 0x0a, 0x09, 0x62, 0x69, 0x6f, 0x67, 0x72, 0x61, 0x70, 0x68, 0x79, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x62, 0x69, 0x6f, 0x67, 0x72, 0x61, 0x70, 0x68, 0x79,
	0x12, 0x1d, 0x0a, 0x0a, 0x62, 0x69, 0x72, 0x74, 0x68, 0x5f, 0x64, 0x61, 0x74, 0x65, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x62, 0x69, 0x72, 0x74, 0x68, 0x44, 0x61, 0x74, 0x65, 0x12,
	0x2e, 0x0a, 0x13, 0x70, 0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65, 0x5f, 0x70, 0x69, 0x63, 0x74, 0x75,
	0x72, 0x65, 0x5f, 0x75, 0x72, 0x6c, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x11, 0x70, 0x72,
	0x6f, 0x66, 0x69, 0x6c, 0x65, 0x50, 0x69, 0x63, 0x74, 0x75, 0x72, 0x65, 0x55, 0x72, 0x6c, 0x12,
	0x1d, 0x0a, 0x0a, 0x73, 0x74, 0x61, 0x72, 0x74, 0x5f, 0x64, 0x61, 0x74, 0x65, 0x18, 0x05, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x09, 0x73, 0x74, 0x61, 0x72, 0x74, 0x44, 0x61, 0x74, 0x65, 0x12, 0x19,
	0x0a, 0x08, 0x65, 0x6e, 0x64, 0x5f, 0x64, 0x61, 0x74, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x07, 0x65, 0x6e, 0x64, 0x44, 0x61, 0x74, 0x65, 0x22, 0x45, 0x0a, 0x0c, 0x41, 0x75, 0x64,
	0x69, 0x6f, 0x42, 0x69, 0x74, 0x72, 0x61, 0x74, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x62, 0x69, 0x74,
	0x72, 0x61, 0x74, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x07, 0x62, 0x69, 0x74, 0x72,
	0x61, 0x74, 0x65, 0x12, 0x1b, 0x0a, 0x09, 0x61, 0x75, 0x64, 0x69, 0x6f, 0x5f, 0x75, 0x72, 0x6c,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x61, 0x75, 0x64, 0x69, 0x6f, 0x55, 0x72, 0x6c,
	0x22, 0xd6, 0x02, 0x0a, 0x0d, 0x41, 0x75, 0x64, 0x69, 0x6f, 0x46, 0x65, 0x61, 0x74, 0x75, 0x72,
	0x65, 0x73, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x65, 0x6d, 0x70, 0x6f, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x05, 0x52, 0x05, 0x74, 0x65, 0x6d, 0x70, 0x6f, 0x12, 0x1b, 0x0a, 0x09, 0x61, 0x75, 0x64, 0x69,
	0x6f, 0x5f, 0x6b, 0x65, 0x79, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x61, 0x75, 0x64,
	0x69, 0x6f, 0x4b, 0x65, 0x79, 0x12, 0x12, 0x0a, 0x04, 0x6d, 0x6f, 0x64, 0x65, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x04, 0x6d, 0x6f, 0x64, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x6c, 0x6f, 0x75,
	0x64, 0x6e, 0x65, 0x73, 0x73, 0x18, 0x04, 0x20, 0x01, 0x28, 0x01, 0x52, 0x08, 0x6c, 0x6f, 0x75,
	0x64, 0x6e, 0x65, 0x73, 0x73, 0x12, 0x16, 0x0a, 0x06, 0x65, 0x6e, 0x65, 0x72, 0x67, 0x79, 0x18,
	0x05, 0x20, 0x01, 0x28, 0x01, 0x52, 0x06, 0x65, 0x6e, 0x65, 0x72, 0x67, 0x79, 0x12, 0x22, 0x0a,
	0x0c, 0x64, 0x61, 0x6e, 0x63, 0x65, 0x61, 0x62, 0x69, 0x6c, 0x69, 0x74, 0x79, 0x18, 0x06, 0x20,
	0x01, 0x28, 0x01, 0x52, 0x0c, 0x64, 0x61, 0x6e, 0x63, 0x65, 0x61, 0x62, 0x69, 0x6c, 0x69, 0x74,
	0x79, 0x12, 0x20, 0x0a, 0x0b, 0x73, 0x70, 0x65, 0x65, 0x63, 0x68, 0x69, 0x6e, 0x65, 0x73, 0x73,
	0x18, 0x07, 0x20, 0x01, 0x28, 0x01, 0x52, 0x0b, 0x73, 0x70, 0x65, 0x65, 0x63, 0x68, 0x69, 0x6e,
	0x65, 0x73, 0x73, 0x12, 0x22, 0x0a, 0x0c, 0x61, 0x63, 0x6f, 0x75, 0x73, 0x74, 0x69, 0x63, 0x6e,
	0x65, 0x73, 0x73, 0x18, 0x08, 0x20, 0x01, 0x28, 0x01, 0x52, 0x0c, 0x61, 0x63, 0x6f, 0x75, 0x73,
	0x74, 0x69, 0x63, 0x6e, 0x65, 0x73, 0x73, 0x12, 0x2a, 0x0a, 0x10, 0x69, 0x6e, 0x73, 0x74, 0x72,
	0x75, 0x6d, 0x65, 0x6e, 0x74, 0x61, 0x6c, 0x6e, 0x65, 0x73, 0x73, 0x18, 0x09, 0x20, 0x01, 0x28,
	0x01, 0x52, 0x10, 0x69, 0x6e, 0x73, 0x74, 0x72, 0x75, 0x6d, 0x65, 0x6e, 0x74, 0x61, 0x6c, 0x6e,
	0x65, 0x73, 0x73, 0x12, 0x1a, 0x0a, 0x08, 0x6c, 0x69, 0x76, 0x65, 0x6e, 0x65, 0x73, 0x73, 0x18,
	0x0a, 0x20, 0x01, 0x28, 0x01, 0x52, 0x08, 0x6c, 0x69, 0x76, 0x65, 0x6e, 0x65, 0x73, 0x73, 0x12,
	0x18, 0x0a, 0x07, 0x76, 0x61, 0x6c, 0x65, 0x6e, 0x63, 0x65, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x01,
	0x52, 0x07, 0x76, 0x61, 0x6c, 0x65, 0x6e, 0x63, 0x65, 0x22, 0xb7, 0x02, 0x0a, 0x04, 0x53, 0x6f,
	0x6e, 0x67, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02,
	0x69, 0x64, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x05, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x12, 0x3d, 0x0a, 0x0e, 0x61, 0x75, 0x64, 0x69,
	0x6f, 0x5f, 0x66, 0x65, 0x61, 0x74, 0x75, 0x72, 0x65, 0x73, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x16, 0x2e, 0x63, 0x61, 0x74, 0x61, 0x6c, 0x6f, 0x67, 0x2e, 0x41, 0x75, 0x64, 0x69, 0x6f,
	0x46, 0x65, 0x61, 0x74, 0x75, 0x72, 0x65, 0x73, 0x52, 0x0d, 0x61, 0x75, 0x64, 0x69, 0x6f, 0x46,
	0x65, 0x61, 0x74, 0x75, 0x72, 0x65, 0x73, 0x12, 0x24, 0x0a, 0x05, 0x67, 0x65, 0x6e, 0x72, 0x65,
	0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0e, 0x2e, 0x63, 0x61, 0x74, 0x61, 0x6c, 0x6f, 0x67,
	0x2e, 0x47, 0x65, 0x6e, 0x72, 0x65, 0x52, 0x05, 0x67, 0x65, 0x6e, 0x72, 0x65, 0x12, 0x21, 0x0a,
	0x0c, 0x72, 0x65, 0x6c, 0x65, 0x61, 0x73, 0x65, 0x5f, 0x64, 0x61, 0x74, 0x65, 0x18, 0x05, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x0b, 0x72, 0x65, 0x6c, 0x65, 0x61, 0x73, 0x65, 0x44, 0x61, 0x74, 0x65,
	0x12, 0x1a, 0x0a, 0x08, 0x64, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x06, 0x20, 0x01,
	0x28, 0x05, 0x52, 0x08, 0x64, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x16, 0x0a, 0x06,
	0x6c, 0x79, 0x72, 0x69, 0x63, 0x73, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x6c, 0x79,
	0x72, 0x69, 0x63, 0x73, 0x12, 0x1a, 0x0a, 0x08, 0x65, 0x78, 0x70, 0x6c, 0x69, 0x63, 0x69, 0x74,
	0x18, 0x08, 0x20, 0x01, 0x28, 0x08, 0x52, 0x08, 0x65, 0x78, 0x70, 0x6c, 0x69, 0x63, 0x69, 0x74,
	0x12, 0x31, 0x0a, 0x08, 0x62, 0x69, 0x74, 0x72, 0x61, 0x74, 0x65, 0x73, 0x18, 0x09, 0x20, 0x03,
	0x28, 0x0b, 0x32, 0x15, 0x2e, 0x63, 0x61, 0x74, 0x61, 0x6c, 0x6f, 0x67, 0x2e, 0x41, 0x75, 0x64,
	0x69, 0x6f, 0x42, 0x69, 0x74, 0x72, 0x61, 0x74, 0x65, 0x52, 0x08, 0x62, 0x69, 0x74, 0x72, 0x61,
	0x74, 0x65, 0x73, 0x32, 0x9c, 0x03, 0x0a, 0x0e, 0x43, 0x61, 0x74, 0x61, 0x6c, 0x6f, 0x67, 0x53,
	0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x12, 0x42, 0x0a, 0x09, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65,
	0x41, 0x63, 0x74, 0x12, 0x19, 0x2e, 0x63, 0x61, 0x74, 0x61, 0x6c, 0x6f, 0x67, 0x2e, 0x43, 0x72,
	0x65, 0x61, 0x74, 0x65, 0x41, 0x63, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1a,
	0x2e, 0x63, 0x61, 0x74, 0x61, 0x6c, 0x6f, 0x67, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x41,
	0x63, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x42, 0x0a, 0x09, 0x55, 0x70,
	0x64, 0x61, 0x74, 0x65, 0x41, 0x63, 0x74, 0x12, 0x19, 0x2e, 0x63, 0x61, 0x74, 0x61, 0x6c, 0x6f,
	0x67, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x41, 0x63, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x1a, 0x1a, 0x2e, 0x63, 0x61, 0x74, 0x61, 0x6c, 0x6f, 0x67, 0x2e, 0x55, 0x70, 0x64,
	0x61, 0x74, 0x65, 0x41, 0x63, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x39,
	0x0a, 0x06, 0x47, 0x65, 0x74, 0x41, 0x63, 0x74, 0x12, 0x16, 0x2e, 0x63, 0x61, 0x74, 0x61, 0x6c,
	0x6f, 0x67, 0x2e, 0x47, 0x65, 0x74, 0x41, 0x63, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x1a, 0x17, 0x2e, 0x63, 0x61, 0x74, 0x61, 0x6c, 0x6f, 0x67, 0x2e, 0x47, 0x65, 0x74, 0x41, 0x63,
	0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x3c, 0x0a, 0x07, 0x47, 0x65, 0x74,
	0x41, 0x63, 0x74, 0x73, 0x12, 0x17, 0x2e, 0x63, 0x61, 0x74, 0x61, 0x6c, 0x6f, 0x67, 0x2e, 0x47,
	0x65, 0x74, 0x41, 0x63, 0x74, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x18, 0x2e,
	0x63, 0x61, 0x74, 0x61, 0x6c, 0x6f, 0x67, 0x2e, 0x47, 0x65, 0x74, 0x41, 0x63, 0x74, 0x73, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x42, 0x0a, 0x09, 0x44, 0x65, 0x6c, 0x65, 0x74,
	0x65, 0x41, 0x63, 0x74, 0x12, 0x19, 0x2e, 0x63, 0x61, 0x74, 0x61, 0x6c, 0x6f, 0x67, 0x2e, 0x44,
	0x65, 0x6c, 0x65, 0x74, 0x65, 0x41, 0x63, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a,
	0x1a, 0x2e, 0x63, 0x61, 0x74, 0x61, 0x6c, 0x6f, 0x67, 0x2e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65,
	0x41, 0x63, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x45, 0x0a, 0x0a, 0x43,
	0x72, 0x65, 0x61, 0x74, 0x65, 0x4d, 0x61, 0x6e, 0x79, 0x12, 0x1a, 0x2e, 0x63, 0x61, 0x74, 0x61,
	0x6c, 0x6f, 0x67, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x4d, 0x61, 0x6e, 0x79, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1b, 0x2e, 0x63, 0x61, 0x74, 0x61, 0x6c, 0x6f, 0x67, 0x2e,
	0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x4d, 0x61, 0x6e, 0x79, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x42, 0x80, 0x01, 0x0a, 0x0b, 0x63, 0x6f, 0x6d, 0x2e, 0x63, 0x61, 0x74, 0x61, 0x6c,
	0x6f, 0x67, 0x42, 0x0c, 0x43, 0x61, 0x74, 0x61, 0x6c, 0x6f, 0x67, 0x50, 0x72, 0x6f, 0x74, 0x6f,
	0x50, 0x01, 0x5a, 0x27, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x4a,
	0x6f, 0x72, 0x67, 0x65, 0x4f, 0x33, 0x2f, 0x66, 0x6c, 0x6f, 0x77, 0x63, 0x61, 0x73, 0x74, 0x2f,
	0x67, 0x65, 0x6e, 0x2f, 0x63, 0x61, 0x74, 0x61, 0x6c, 0x6f, 0x67, 0xa2, 0x02, 0x03, 0x43, 0x58,
	0x58, 0xaa, 0x02, 0x07, 0x43, 0x61, 0x74, 0x61, 0x6c, 0x6f, 0x67, 0xca, 0x02, 0x07, 0x43, 0x61,
	0x74, 0x61, 0x6c, 0x6f, 0x67, 0xe2, 0x02, 0x13, 0x43, 0x61, 0x74, 0x61, 0x6c, 0x6f, 0x67, 0x5c,
	0x47, 0x50, 0x42, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0xea, 0x02, 0x07, 0x43, 0x61,
	0x74, 0x61, 0x6c, 0x6f, 0x67, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_catalog_catalog_proto_rawDescOnce sync.Once
	file_catalog_catalog_proto_rawDescData = file_catalog_catalog_proto_rawDesc
)

func file_catalog_catalog_proto_rawDescGZIP() []byte {
	file_catalog_catalog_proto_rawDescOnce.Do(func() {
		file_catalog_catalog_proto_rawDescData = protoimpl.X.CompressGZIP(file_catalog_catalog_proto_rawDescData)
	})
	return file_catalog_catalog_proto_rawDescData
}

var file_catalog_catalog_proto_msgTypes = make([]protoimpl.MessageInfo, 19)
var file_catalog_catalog_proto_goTypes = []any{
	(*CreateActRequest)(nil),   // 0: catalog.CreateActRequest
	(*CreateActResponse)(nil),  // 1: catalog.CreateActResponse
	(*UpdateActRequest)(nil),   // 2: catalog.UpdateActRequest
	(*UpdateActResponse)(nil),  // 3: catalog.UpdateActResponse
	(*GetActRequest)(nil),      // 4: catalog.GetActRequest
	(*GetActResponse)(nil),     // 5: catalog.GetActResponse
	(*GetActsRequest)(nil),     // 6: catalog.GetActsRequest
	(*GetActsResponse)(nil),    // 7: catalog.GetActsResponse
	(*DeleteActRequest)(nil),   // 8: catalog.DeleteActRequest
	(*DeleteActResponse)(nil),  // 9: catalog.DeleteActResponse
	(*CreateManyRequest)(nil),  // 10: catalog.CreateManyRequest
	(*CreateManyResponse)(nil), // 11: catalog.CreateManyResponse
	(*Act)(nil),                // 12: catalog.Act
	(*Album)(nil),              // 13: catalog.Album
	(*Genre)(nil),              // 14: catalog.Genre
	(*Member)(nil),             // 15: catalog.Member
	(*AudioBitrate)(nil),       // 16: catalog.AudioBitrate
	(*AudioFeatures)(nil),      // 17: catalog.AudioFeatures
	(*Song)(nil),               // 18: catalog.Song
}
var file_catalog_catalog_proto_depIdxs = []int32{
	12, // 0: catalog.CreateActRequest.act:type_name -> catalog.Act
	12, // 1: catalog.UpdateActRequest.act:type_name -> catalog.Act
	12, // 2: catalog.GetActResponse.act:type_name -> catalog.Act
	12, // 3: catalog.GetActsResponse.acts:type_name -> catalog.Act
	12, // 4: catalog.CreateManyRequest.acts:type_name -> catalog.Act
	14, // 5: catalog.Act.genres:type_name -> catalog.Genre
	13, // 6: catalog.Act.albums:type_name -> catalog.Album
	15, // 7: catalog.Act.members:type_name -> catalog.Member
	14, // 8: catalog.Album.genre:type_name -> catalog.Genre
	18, // 9: catalog.Album.songs:type_name -> catalog.Song
	17, // 10: catalog.Song.audio_features:type_name -> catalog.AudioFeatures
	14, // 11: catalog.Song.genre:type_name -> catalog.Genre
	16, // 12: catalog.Song.bitrates:type_name -> catalog.AudioBitrate
	0,  // 13: catalog.CatalogService.CreateAct:input_type -> catalog.CreateActRequest
	2,  // 14: catalog.CatalogService.UpdateAct:input_type -> catalog.UpdateActRequest
	4,  // 15: catalog.CatalogService.GetAct:input_type -> catalog.GetActRequest
	6,  // 16: catalog.CatalogService.GetActs:input_type -> catalog.GetActsRequest
	8,  // 17: catalog.CatalogService.DeleteAct:input_type -> catalog.DeleteActRequest
	10, // 18: catalog.CatalogService.CreateMany:input_type -> catalog.CreateManyRequest
	1,  // 19: catalog.CatalogService.CreateAct:output_type -> catalog.CreateActResponse
	3,  // 20: catalog.CatalogService.UpdateAct:output_type -> catalog.UpdateActResponse
	5,  // 21: catalog.CatalogService.GetAct:output_type -> catalog.GetActResponse
	7,  // 22: catalog.CatalogService.GetActs:output_type -> catalog.GetActsResponse
	9,  // 23: catalog.CatalogService.DeleteAct:output_type -> catalog.DeleteActResponse
	11, // 24: catalog.CatalogService.CreateMany:output_type -> catalog.CreateManyResponse
	19, // [19:25] is the sub-list for method output_type
	13, // [13:19] is the sub-list for method input_type
	13, // [13:13] is the sub-list for extension type_name
	13, // [13:13] is the sub-list for extension extendee
	0,  // [0:13] is the sub-list for field type_name
}

func init() { file_catalog_catalog_proto_init() }
func file_catalog_catalog_proto_init() {
	if File_catalog_catalog_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_catalog_catalog_proto_msgTypes[0].Exporter = func(v any, i int) any {
			switch v := v.(*CreateActRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_catalog_catalog_proto_msgTypes[1].Exporter = func(v any, i int) any {
			switch v := v.(*CreateActResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_catalog_catalog_proto_msgTypes[2].Exporter = func(v any, i int) any {
			switch v := v.(*UpdateActRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_catalog_catalog_proto_msgTypes[3].Exporter = func(v any, i int) any {
			switch v := v.(*UpdateActResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_catalog_catalog_proto_msgTypes[4].Exporter = func(v any, i int) any {
			switch v := v.(*GetActRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_catalog_catalog_proto_msgTypes[5].Exporter = func(v any, i int) any {
			switch v := v.(*GetActResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_catalog_catalog_proto_msgTypes[6].Exporter = func(v any, i int) any {
			switch v := v.(*GetActsRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_catalog_catalog_proto_msgTypes[7].Exporter = func(v any, i int) any {
			switch v := v.(*GetActsResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_catalog_catalog_proto_msgTypes[8].Exporter = func(v any, i int) any {
			switch v := v.(*DeleteActRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_catalog_catalog_proto_msgTypes[9].Exporter = func(v any, i int) any {
			switch v := v.(*DeleteActResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_catalog_catalog_proto_msgTypes[10].Exporter = func(v any, i int) any {
			switch v := v.(*CreateManyRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_catalog_catalog_proto_msgTypes[11].Exporter = func(v any, i int) any {
			switch v := v.(*CreateManyResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_catalog_catalog_proto_msgTypes[12].Exporter = func(v any, i int) any {
			switch v := v.(*Act); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_catalog_catalog_proto_msgTypes[13].Exporter = func(v any, i int) any {
			switch v := v.(*Album); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_catalog_catalog_proto_msgTypes[14].Exporter = func(v any, i int) any {
			switch v := v.(*Genre); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_catalog_catalog_proto_msgTypes[15].Exporter = func(v any, i int) any {
			switch v := v.(*Member); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_catalog_catalog_proto_msgTypes[16].Exporter = func(v any, i int) any {
			switch v := v.(*AudioBitrate); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_catalog_catalog_proto_msgTypes[17].Exporter = func(v any, i int) any {
			switch v := v.(*AudioFeatures); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_catalog_catalog_proto_msgTypes[18].Exporter = func(v any, i int) any {
			switch v := v.(*Song); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_catalog_catalog_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   19,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_catalog_catalog_proto_goTypes,
		DependencyIndexes: file_catalog_catalog_proto_depIdxs,
		MessageInfos:      file_catalog_catalog_proto_msgTypes,
	}.Build()
	File_catalog_catalog_proto = out.File
	file_catalog_catalog_proto_rawDesc = nil
	file_catalog_catalog_proto_goTypes = nil
	file_catalog_catalog_proto_depIdxs = nil
}
